# managed by ansible

{% if corosync_transport is defined and corosync_transport == 'udpu' %}
{% if ipproto == 'ipv4' %}
{% set netlist = [ networks.split(',') | ipv4 | first ]  %}
{% endif %}
{% if ipproto == 'ipv6' %}
{% set netlist = [ networks.split(',') | ipv6 | first ] %}
{% endif %}
{% else %}
{% if ipproto == 'ipv4' %}
{% set netlist = networks.split(',') | ipv4 %}
{% endif %}
{% if ipproto == 'ipv6' %}
{% set netlist = networks.split(',') | ipv6 %}
{% endif %}
{% endif %}

totem {
    version: 2
    cluster_name: testcluster
{% if ipproto == 'ipv6' %}
    ip_version: ipv6
{% endif %}
{% if corosync_transport is defined %}
    transport: {{ corosync_transport }}
{% endif %}
{% if corosync_transport is defined and corosync_transport == 'knet' %}
{% if corosync_knet_link_mode is defined %}
    link_mode: {{ corosync_knet_link_mode }}
{% endif %}
{% if corosync_knet_crypto_hash is defined %}
    crypto_hash: {{ corosync_knet_crypto_hash }}
{% endif %}
{% if corosync_knet_crypto_cipher is defined %}
    crypto_cipher: {{ corosync_knet_crypto_cipher }}
{% endif %}
{% if corosync_knet_transport is defined %}
{% for interface in netlist %}
    interface {
        linknumber: {{ loop.index0 }}
        knet_transport: {{ corosync_knet_transport }}
    }
{% endfor %}
{% endif %}
{% endif %}
}

nodelist {
{% for node in groups['test-nodes'] %}
    node {
{% for network in netlist %}
{% set outer_loop = loop %}
{% if ipproto == 'ipv4' %}
{% set v4list = hostvars[node].ansible_all_ipv4_addresses | ipaddr( network ) %}
{% for v4 in v4list %}
        ring{{ outer_loop.index0 }}_addr: {{ v4 }}
{% endfor %}
{% endif %}
{% if ipproto == 'ipv6' %}
{% set v6list = hostvars[node].ansible_all_ipv6_addresses | ipaddr( network ) %}
{% for v6 in v6list %}
        ring{{ outer_loop.index0 }}_addr: {{ v6 }}
{% endfor %}
{% endif %}
{% endfor %}
        nodeid: {{ loop.index }}
    }
{% endfor %}
}

quorum {
    provider: corosync_votequorum
}

logging {
    debug: on
    to_logfile: yes
    logfile: /var/log/cluster/corosync.log
    to_syslog: yes
    timestamp: off
}
